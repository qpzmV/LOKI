{
    // 使用 IntelliSense 了解相关属性。
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "lldb", // 调试器类型，对应 CodeLLDB 扩展
            "request": "launch", // 启动调试会话
            "name": "Debug diem-swarm (LOKI fuzzing)", // 在 VS Code 调试面板中显示的名称
            "program": "${workspaceFolder}/src/diem_fuzz/target/debug/diem-swarm", // 要执行的主程序路径
            "args": [ // 传递给主程序的命令行参数
                "--fuzzer-node",
                "${workspaceFolder}/src/diem_fuzz/target/debug/diem-node", // 注意这里使用相对路径时，要确保相对路径正确
                "--diem-node",
                "${workspaceFolder}/src/diem_fuzz/target/debug/diem-node", // 假设你的LOKI/diem项目根目录是workspaceFolder，那么这里需要根据实际情况调整相对路径
                "-n", "4",
                "-t", "1",
                "-c", "${workspaceFolder}/src/diem_fuzz/tmp" // 注意这里的 "./tmp" 是相对于 `program` 的工作目录
            ],
            "cwd": "${workspaceFolder}", // 程序的工作目录，通常设置为项目根目录
            "sourceLanguages": ["rust"], // 指定源代码语言为 Rust，有助于调试器正确解析 Rust 符号
            "env": {
                // 如果你的程序需要特定的环境变量，可以在这里设置
                // 例如：
                // "RUST_BACKTRACE": "full"
            },
            "stopOnEntry": false, // 是否在程序入口处停止。如果想在main函数开始时暂停，可以设为 true
            // "preLaunchTask": "cargo build" // 在启动调试前执行的 task，确保程序是最新的 debug 版本
            //                              // 你需要单独配置这个 task
        },
        {
            "type": "lldb", // 调试器类型，对应 CodeLLDB 扩展
            "request": "launch", // 启动调试会话
            "name": "Debug diem-node", // 在 VS Code 调试面板中显示的名称
            "program": "${workspaceFolder}/src/diem_fuzz/target/debug/diem-node", // 要执行的主程序路径
            "args": [ // 传递给主程序的命令行参数
                "-f", "${workspaceFolder}/src/diem_fuzz/tmp/1/node.yaml",
            ],
            "cwd": "${workspaceFolder}", // 程序的工作目录，通常设置为项目根目录
            "sourceLanguages": ["rust"], // 指定源代码语言为 Rust，有助于调试器正确解析 Rust 符号
            "stopOnEntry": false, // 是否在程序入口处停止。如果想在main函数开始时暂停，可以设为 true
            // "preLaunchTask": "cargo build" // 在启动调试前执行的 task，确保程序是最新的 debug 版本
            //                              // 你需要单独配置这个 task
        },
        {
            // 这是一个辅助配置，用于单独调试 diem-node，如果需要的话
            "type": "lldb",
            "request": "launch",
            "name": "Debug diem-node",
            "program": "${workspaceFolder}/bin/diem-node",
            "args": [], // 如果 diem-node 独立运行时需要参数，请在这里添加
            "cwd": "${workspaceFolder}",
            "sourceLanguages": ["rust"],
            "preLaunchTask": "cargo build"
        }
    ]
}